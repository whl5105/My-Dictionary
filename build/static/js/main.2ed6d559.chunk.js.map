{"version":3,"sources":["firebase.js","redux/modules/Card.js","components/Main.js","components/AddPage.js","App.js","reportWebVitals.js","redux/configStore.js","index.js"],"names":["initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","initialState","card","loadCard","card_list","type","updateCard","card_index","deleteCard","Cardbox","styled","div","Card","Main","history","useHistory","dispatch","useDispatch","data_list","useSelector","state","React","useEffect","a","getDocs","collection","card_data","forEach","c","push","id","data","style","color","textAlign","map","idx","display","justifyContent","fontSize","word","cursor","onClick","paddingLeft","card_id","getState","window","alert","docRef","doc","deleteDoc","_card_list","findIndex","explanation","example","Fab","position","bottom","right","AddPage","props","params","useParams","useRef","changeValue","ref","defaultValue","placeholder","Button","width","marginBottom","padding","variant","current","value","updateDoc","goBack","list","gom","replace","gom2","gom3","addDoc","AppAll","MainBox","App","className","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","middlewares","thunk","enhancer","applyMiddleware","rootReducer","combineReducers","action","new_card_list","parseInt","filter","l","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2ed6d559.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDmtCrG77Fs3X5EZd9DpoaRv0zYJQb9J_8\",\n  authDomain: \"my-dictionary2.firebaseapp.com\",\n  projectId: \"my-dictionary2\",\n  storageBucket: \"my-dictionary2.appspot.com\",\n  messagingSenderId: \"122805387559\",\n  appId: \"1:122805387559:web:44255f8d7f67f6563c6902\",\n  measurementId: \"G-886EDKSWRW\",\n};\ninitializeApp(firebaseConfig);\n// Initialize Firebase\n// const analytics = getAnalytics(app);\n\nexport const db = getFirestore();\n","// card.js\nimport { db } from \"../../firebase\";\nimport {\n  collection,\n  doc,\n  getDocs,\n  addDoc,\n  updateDoc,\n  deleteDoc,\n} from \"firebase/firestore\";\n\n// ---- Actions ----\nconst LOAD = \"card/LOAD\";\nconst CREATE = \"card/CREATE\";\nconst UPDATE = \"card/UPDATE\";\nconst DELETE = \"card/DELETE\";\n\n//---- 초기값 -----\nconst initialState = {\n  card: [],\n};\n\n// ----- Action Creators ----\nexport function loadCard(card_list) {\n  return { type: LOAD, card_list };\n}\nexport function createCard(card) {\n  return { type: CREATE, card };\n}\nexport function updateCard(card_index) {\n  return { type: UPDATE, card_index };\n}\nexport function deleteCard(card_index) {\n  return { type: DELETE, card_index };\n}\n\n//  ---- middlewares ----\n// ---- Firebase DB 조회 ----\nexport const loadCardFB = () => {\n  return async function (dispatch) {\n    // Firebase DB 조회\n    const card_data = await getDocs(collection(db, \"card\"));\n\n    let card_list = [];\n    card_data.forEach((c) => {\n      card_list.push({ id: c.id, ...c.data() });\n    });\n    dispatch(loadCard(card_list));\n  };\n};\n// ---- Firebase DB 생성 ----\nexport const createCardFB = (card) => {\n  return async function (dispatch) {\n    // FireStore DB 생성\n    await addDoc(collection(db, \"card\"), card);\n  };\n};\n// ---- Firebase DB 수정 ----\nexport const updateCardFB = (card_data, card_id) => {\n  return async function (dispatch, getState) {\n    // FireStore DB 수정\n    const docRef = doc(db, \"card\", card_id);\n    await updateDoc(docRef, {\n      word: card_data.word,\n      explanation: card_data.explanation,\n      example: card_data.example,\n    });\n\n    const _card_list = getState().card.card;\n    const card_index = _card_list.findIndex((c) => {\n      return c.id === card_id;\n    });\n    dispatch(updateCard(card_index));\n  };\n};\n\n// ---- Firebase DB 삭제 ----\nexport const deleteCardFB = (card_id) => {\n  return async function (dispatch, getState) {\n    if (!card_id) {\n      window.alert(\"아이디가 없네요\");\n      return;\n    }\n    // FireStore DB 삭제\n    const docRef = doc(db, \"card\", card_id);\n    await deleteDoc(docRef);\n\n    const _card_list = getState().card.card;\n    const card_index = _card_list.findIndex((c) => {\n      return c.id === card_id;\n    });\n    dispatch(deleteCard(card_index));\n  };\n};\n\n// ---- Reducer -----\nexport default function reducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case \"card/LOAD\": {\n      return { card: action.card_list };\n    }\n\n    case \"card/CREATE\": {\n      let new_card_list = [...state.card, action.card];\n      return { card: new_card_list };\n    }\n    case \"card/UPDATE\": {\n      const new_card_list = state.card.map((c, idx) => {\n        if (parseInt(action.card_index) === idx) {\n          return {\n            ...c,\n            word: c.word,\n            explanation: c.explanation,\n            example: c.explanation,\n          };\n        } else {\n          return c;\n        }\n      });\n      return { ...state, list: new_card_list };\n    }\n    case \"card/DELETE\": {\n      const new_card_list = state.card.filter((l, idx) => {\n        return parseInt(action.card_index) !== idx;\n      });\n      return { ...state, card: new_card_list };\n    }\n\n    default:\n      return state;\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { loadCardFB, deleteCardFB } from \"../redux/modules/Card\";\n// --- ICON ----\nimport { TiPencil, TiTimes } from \"react-icons/ti\";\nimport Fab from \"@mui/material/Fab\";\n\nconst Main = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const data_list = useSelector((state) => state.card.card);\n\n  React.useEffect(() => {\n    dispatch(loadCardFB());\n  }, []);\n\n  return (\n    <>\n      <h1 style={{ color: \"#333\", textAlign: \"center\" }}>영어 사전</h1>\n      <Cardbox>\n        {data_list.map((c, idx) => {\n          return (\n            <Card key={idx}>\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                {/* <span>단어</span> */}\n                <p style={{ fontSize: \"20px\" }}>{c.word}</p>\n                <div\n                  style={{\n                    color: \"#d4d9e5\",\n                    fontSize: \"30px\",\n                    cursor: \"pointer\",\n                    display: \"flex\",\n                  }}\n                >\n                  <TiPencil\n                    onClick={() => {\n                      history.push(\"/AddPage/\" + idx);\n                    }}\n                  />\n                  <TiTimes\n                    style={{ paddingLeft: \"5px\" }}\n                    onClick={() => {\n                      dispatch(deleteCardFB(data_list[idx].id));\n                    }}\n                  />\n                </div>\n              </div>\n              <div>\n                <span>설명</span>\n                <p style={{ color: \"#555\" }}>{c.explanation}</p>\n              </div>\n              <div>\n                <span>예시</span>\n                <p style={{ color: \"#5555d9\" }}>{c.example}</p>\n              </div>\n            </Card>\n          );\n        })}\n      </Cardbox>\n      <Fab\n        color=\"primary\"\n        style={{\n          position: \"absolute\",\n          bottom: \"20px\",\n          right: \"20px\",\n          fontSize: \"30px\",\n        }}\n        onClick={() => {\n          history.push(\"/AddPage\");\n        }}\n      >\n        +\n      </Fab>\n    </>\n  );\n};\nconst Cardbox = styled.div`\n  display: flex;\n  flex-direction: column;\n  overflow-x: hidden;\n  overflow-y: auto;\n  height: 71vh;\n`;\nconst Card = styled.div`\n  box-sizing: border-box;\n  min-width: 300px;\n  border: 2px solid #d4d9e5;\n  border-radius: 5px;\n  padding: 20px;\n  margin-bottom: 10px;\n  position: relative;\n\n  & div {\n    text-align: left;\n    margin-bottom: 10px;\n  }\n  & span {\n    text-decoration: underline;\n    font-weight: bold;\n    font-size: 12px;\n  }\n  & p {\n    margin: 0;\n    padding: 5px;\n    color: #333;\n    word-break: break-all;\n    font-size: 14px;\n  }\n`;\n\nexport default Main;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory, useParams } from \"react-router\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createCardFB ,updateCardFB} from \"../redux/modules/Card\";\n// ---- ICON ----\nimport Button from \"@mui/material/Button\";\n\nconst AddPage = (props) => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const params = useParams();\n\n  const word = React.useRef();\n  const explanation = React.useRef();\n  const example = React.useRef();\n\n  const data_list = useSelector((state) => state.card.card);\n  const changeValue = data_list.[params.idx];\n\n  // ---- 추가 버튼 클릭 ----\n  function addCardList() {\n    let list = {\n      word: word.current.value,\n      explanation: explanation.current.value,\n      example: example.current.value,\n    };\n  \n    //---- 입력조건 (입력값 3개 모두 내용이 있을경우 dispatch ,앞뒤 공백 검사) ----\n    if(list.word === \"\" && list.explanation ===\"\"&& list.example === \"\"){\n      alert(\"내용을 모두 입력해주세요\")\n    }else{\n      let gom = list.word.replace(/^\\s+|\\s+$/gm, \"\");\n      let gom2 = list.explanation.replace(/^\\s+|\\s+$/gm, \"\");\n      let gom3 = list.example.replace(/^\\s+|\\s+$/gm, \"\");\n      if(gom === \"\" || gom2===\"\" || gom3 === \"\"){\n        alert(\"내용을 모두 입력해주세요\")\n      }else{\n        dispatch(\n          createCardFB({\n            word: word.current.value,\n            explanation: explanation.current.value,\n            example: example.current.value,\n          })\n        );\n        history.goBack();\n      }\n    }\n  }\n  //---- 수정 버튼 클릭 ---- \n  function updateCardList() {\n    dispatch(\n      updateCardFB({\n        word: word.current.value,\n        explanation: explanation.current.value,\n        example: example.current.value,\n      },changeValue.id)\n    );\n    history.goBack()\n  }\n\n  return (\n    <div>\n      {params.idx ? (\n        <h1 style={{ color: \"#333\" , textAlign: \"center\" } }>수정하기</h1>\n      ) : (\n        <h1 style={{ color: \"#333\" , textAlign: \"center\" }}>추가하기</h1>\n      )}\n      <Card>\n        <span>단어</span>\n        {params.idx ? (\n          <input type=\"text\" ref={word} defaultValue={changeValue.word}></input>\n        ) : (\n          <input\n            type=\"text\"\n            placeholder=\"단어를 입력하세요.\"\n            ref={word}\n          ></input>\n        )}\n      </Card>\n      <Card>\n        <span>설명</span>\n        {params.idx ? (\n          <input\n            type=\"text\"\n            ref={explanation}\n            defaultValue={changeValue.explanation}\n          ></input>\n        ) : (\n          <input\n            type=\"text\"\n            placeholder=\"설명을 입력하세요.\"\n            ref={explanation}\n          ></input>\n        )}\n      </Card>\n      <Card>\n        <span>예시</span>\n        {params.idx ? (\n          <input\n            type=\"text\"\n            ref={example}\n            defaultValue={changeValue.example}\n          ></input>\n        ) : (\n          <input\n            type=\"text\"\n            placeholder=\"예시를 입력하세요.\"\n            ref={example}\n          ></input>\n        )}\n      </Card>\n      {params.idx ? (\n        <Button\n          style={{ width: \"100%\", marginBottom: \"10px\", padding: \"10px 0\" }}\n          variant=\"contained\"\n          onClick={updateCardList}\n        >\n          수정\n        </Button>\n      ) : (\n        <Button\n          style={{ width: \"100%\", marginBottom: \"10px\", padding: \"10px 0\" }}\n          variant=\"contained\"\n          onClick={addCardList}\n        >\n          추가\n        </Button>\n      )}\n\n      <Button\n        style={{ width: \"100%\", padding: \"10px 0\" }}\n        variant=\"outlined\"\n        onClick={() => {\n          history.goBack();\n        }}\n      >\n        취소\n      </Button>\n    </div>\n  );\n};\nconst Card = styled.div`\n  background-color: #f1f2f5;\n  border: none;\n  border-radius: 5px;\n  padding: 20px;\n  margin-bottom: 10px;\n  display: flex;\n  flex-direction: column;\n  text-align: left;\n  min-width: 250px;\n  & span {\n    margin-bottom: 4px;\n    font-weight: bold;\n    font-size: 12px;\n    padding-left: 5px;\n  }\n  & input {\n    padding: 10px;\n    border: 1px solid #eee;\n    border-radius: 5px;\n  }\n  & input:focus {\n    outline: none;\n    border: 1px solid #9da2af;\n  }\n`;\n\nexport default AddPage;\n","import \"./App.css\";\nimport React from \"react\";\nimport Main from \"./components/Main\";\nimport AddPage from \"./components/AddPage\";\nimport styled from \"styled-components\";\nimport { Route } from \"react-router\";\n\nfunction App() {\n  return (\n    <AppAll className=\"App\">\n      <MainBox>\n        <Route path=\"/\" exact component={Main} />\n        <Route path=\"/addpage\" component={AddPage} exact />\n        <Route path=\"/addpage/:idx\" component={AddPage} />\n      </MainBox>\n    </AppAll>\n  );\n}\nconst AppAll = styled.div`\n  width: 100%;\n  height: 100vh;\n  background: #eee;\n  display: flex;\n\n  justify-content: center;\n  align-items: center;\n`;\nconst MainBox = styled.div`\n  background: #fff;\n  width: 30%;\n  height: 80vh;\n  min-width: 300px;\n  max-height: 80vh;\n  padding: 20px;\n  position: relative;\n  border-radius: 10px;\n`;\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport card from \"./modules/Card\";\nimport thunk from \"redux-thunk\";\n\n//미들웨어들 하나로 묶기\nconst middlewares = [thunk];\nconst enhancer = applyMiddleware(...middlewares);\n\n//리듀서 묶기\nconst rootReducer = combineReducers({ card });\n\n//스토어 생성\nconst store = createStore(rootReducer, enhancer);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/configStore\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}